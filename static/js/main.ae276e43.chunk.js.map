{"version":3,"sources":["Assets/Images/play.svg","Assets/Images/pause.svg","Assets/Sounds/ding-sound.mp3","Assets/Images/done.svg","Assets/Images/delete.svg","Components/Timer/index.js","CustomsHooks/useInterval/index.js","Contexts/TaskContext/index.js","Components/Tasks/TaskForm/index.js","Components/Tasks/TaskItem/index.js","Components/Tasks/TaskList/index.js","Components/Tasks/TaskModalButton/index.js","Components/Tasks/index.js","Components/Header/index.js","Components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Timer","audio","Audio","soundTimeOut","useState","minutes","setMinutes","seconds","setSeconds","isRunning","setIsRunning","inputMinutes","setInputMinutes","inputSeconds","setInputSeconds","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","secondsTimer","document","title","JSON","stringify","play","toggleRunning","className","onSubmit","e","preventDefault","placeholder","type","min","max","maxLength","onChange","target","value","onClick","src","pause","alt","TaskContext","createContext","TaskContextProvider","props","defaultTask","complete","priority","tasks","setTask","isOpenModal","setIsOpenModal","localStorageData","parse","localStorage","getItem","setItem","Provider","addTask","console","log","newTasks","uuidv4","toast","info","autoClose","position","POSITION","BOTTOM_CENTER","removeTask","filter","task","success","setComplete","TaskToUpdate","filteredTask","toggleVisibilityModal","children","TaskForm","useContext","setTitle","setPriority","changePriority","event","required","name","checked","TaskItem","isComplete","key","doneSVG","deletSVG","TaskList","length","map","role","aria-label","TaskModalButton","TaskContainer","Header","Footer","href","rel","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ae276e43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.5bd0adaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.06b75a9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ding-sound.50e87879.mp3\";","module.exports = __webpack_public_path__ + \"static/media/done.c39ca479.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.07082c40.svg\";","import React, {useState} from 'react';\r\nimport useInterval from '../../CustomsHooks/useInterval';\r\n\r\nimport play from '../../Assets/Images/play.svg';\r\nimport pause from '../../Assets/Images/pause.svg';\r\nimport soundTimeOut from '../../Assets/Sounds/ding-sound.mp3';\r\n\r\nconst Timer = () => {\r\n    const delay = 1000;\r\n    const audio = new Audio(soundTimeOut);\r\n\r\n    const [minutes, setMinutes] = useState(25);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n\r\n    const [inputMinutes, setInputMinutes] = useState(0);\r\n    const [inputSeconds, setInputSeconds] = useState(0);\r\n\r\n    useInterval(() => {\r\n        // Format timer title\r\n        const secondsTimer = seconds >= 10 ? seconds : \"0\" + seconds;\r\n        document.title = JSON.stringify(`⏳ Time left -> ${minutes} : ${secondsTimer} ☑️`);\r\n        if(seconds > 0){\r\n            setSeconds(seconds - 1);\r\n        }\r\n        if(seconds === 0){\r\n            if(minutes <= 0){\r\n                setIsRunning(false)\r\n                document.title =  \"⏰ Time out !!! ⏰\";\r\n                audio.play();\r\n            }\r\n            else{\r\n                setMinutes(minutes - 1);\r\n                setSeconds(59);\r\n            }\r\n        }\r\n    },\r\n        // handle timer delay\r\n        isRunning ? delay : null\r\n    );\r\n\r\n    const handleSubmitTimer = (e) => {\r\n        e.preventDefault();\r\n        if(inputSeconds){\r\n            setMinutes(inputMinutes);\r\n            if(inputSeconds === \"00\" || inputSeconds === \"0\")\r\n                setSeconds(0);\r\n            else\r\n                setSeconds(inputSeconds);\r\n            setIsRunning(true);\r\n        }\r\n        else{\r\n            setIsRunning(true);\r\n        }\r\n    }\r\n\r\n    const toggleRunning = () => {\r\n        setIsRunning(!isRunning);\r\n    }\r\n\r\n    return (\r\n        <div id=\"timer\">\r\n            <h2 className=\"title-part\">Timer</h2>\r\n            <form onSubmit={handleSubmitTimer}>\r\n                <input placeholder=\"minutes\" type=\"number\" min=\"0\" max=\"59\" maxLength=\"2\"  onChange={(e) => setInputMinutes(e.target.value)}/>\r\n                <label>m</label>\r\n                <input placeholder=\"seconds\" type=\"number\" min=\"0\" max=\"59\" maxLength=\"2\"   onChange={(e) => setInputSeconds(e.target.value)}/>\r\n                <label>s</label>\r\n                <input className=\"start\" type=\"submit\" value=\"START\" />\r\n            </form>\r\n            <div className=\"control-area\">\r\n                <h2 className=\"timer-print\">{minutes} : {seconds >= 10 ? seconds : \"0\" + seconds}</h2>\r\n                {\r\n                    isRunning ? \r\n                    <div className=\"control-button play\" onClick={() => { toggleRunning() }}>\r\n                        <img src={pause} alt=\"pause\" />\r\n                    </div>\r\n                    :\r\n                    <div className=\"control-button pause\" onClick={() => { toggleRunning() }}>\r\n                        <img src={play} alt=\"play\"/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Timer;","import { useEffect, useRef } from 'react';\r\n\r\nexport default function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}","import React, { createContext, useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const TaskContext = createContext();\r\n\r\nconst TaskContextProvider = (props) => {\r\n    const defaultTask =  [\r\n        { id : 1, complete: false, title : 'Save the world again 🌎', priority: 'low', minutes: 2, seconds : 30 },\r\n        { id : 2, complete: false, title : 'Do some push-up 💪', priority: 'medium', minutes: '15', seconds : '00' },\r\n        { id : 3, complete: false, title : 'Watch La casa de Papel season 4 episode 6 💔', priority: 'high', minutes: '50', seconds : '00' },\r\n    ];\r\n    const [tasks, setTask] = useState([]);\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        let localStorageData = JSON.parse(localStorage.getItem(\"Timer_Task\"));\r\n        if(localStorageData){\r\n            setTask(localStorageData);\r\n        }\r\n        else{\r\n            localStorage.setItem('Timer_Task', JSON.stringify(defaultTask));\r\n            setTask(defaultTask);\r\n        }\r\n    }, []);\r\n\r\n    const addTask = (title, priority, minutes, seconds) => { \r\n        console.log(priority)\r\n        const newTasks = [...tasks, {\r\n            id: uuidv4(),\r\n            complete: false,\r\n            title,\r\n            priority,\r\n            minutes,\r\n            seconds  \r\n        }];\r\n\r\n        setTask(newTasks)\r\n        localStorage.setItem('Timer_Task', JSON.stringify(newTasks));\r\n        toast.info(\"🔥 A new task has been added ! 🔥\", {autoClose : 3000, position: toast.POSITION.BOTTOM_CENTER});\r\n    }\r\n\r\n    const removeTask = (id) => {\r\n        const newTasks = tasks.filter(task => task.id !== id)\r\n        setTask(newTasks);\r\n        localStorage.setItem('Timer_Task', JSON.stringify(newTasks));\r\n        toast.success(\"Your task has been removed ! 🚀\", {autoClose : 3000, position: toast.POSITION.BOTTOM_CENTER});\r\n    }\r\n\r\n    const setComplete = (id) => {\r\n        let TaskToUpdate = tasks.filter(task => task.id === id );\r\n        // because filter return a array\r\n        TaskToUpdate = TaskToUpdate[0];\r\n        // set it to complete\r\n        TaskToUpdate.complete = !TaskToUpdate.complete;\r\n        // get other task\r\n        const filteredTask = tasks.filter(task => task.id !== id);\r\n        const newTasks = [...filteredTask, TaskToUpdate];\r\n        // put the updated new task\r\n        setTask(newTasks);\r\n        localStorage.setItem('Timer_Task', JSON.stringify(newTasks));\r\n        toast.info(\"✔️ Nice work ! Keep up ! 😊\", {autoClose : 3000, position: toast.POSITION.BOTTOM_CENTER});\r\n    }\r\n\r\n    const  toggleVisibilityModal = () => {\r\n        setIsOpenModal(!isOpenModal);\r\n    }\r\n\r\n    return (\r\n        <TaskContext.Provider value={{tasks, addTask, removeTask, setComplete, isOpenModal, toggleVisibilityModal}} >\r\n            <ToastContainer />\r\n            { props.children }\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TaskContextProvider;","import React, {useState, useContext} from \"react\";\r\nimport { TaskContext } from \"../../../Contexts/TaskContext\";\r\n\r\nconst TaskForm = () => {\r\n    const { addTask, isOpenModal, toggleVisibilityModal } = useContext(TaskContext);\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [priority, setPriority] = useState('high');\r\n    const [minutes, setMinutes] = useState();\r\n    const [seconds, setSeconds] = useState();\r\n    \r\n    const submitTask = (event) => {\r\n        event.preventDefault();\r\n        addTask(title, priority, minutes, seconds);\r\n        toggleVisibilityModal(isOpenModal)\r\n    }\r\n    \r\n    const changePriority = (e) => {\r\n        setPriority(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"modal-task\" className={isOpenModal ? \"openModal\" : \"closeModal\"}>\r\n                <form className=\"modal\" onSubmit={submitTask}>\r\n                    <h3>Create Task</h3>\r\n                    <div className=\"input-text-container\">\r\n                        <input placeholder=\"Title\" onChange={(e) => setTitle(e.target.value)} required/>\r\n                    </div>\r\n                    <div className=\"checkbox-container\">\r\n                        <div className=\"priority-check\">\r\n                            <label className=\"high\">\r\n                                <input \r\n                                    type='radio'\r\n                                    name='high'\r\n                                    value='high'\r\n                                    checked={priority === 'high'}\r\n                                    className=\"\"\r\n                                    onChange={changePriority}\r\n                                />\r\n                                High\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"priority-check\">\r\n                            <label className=\"medium\">\r\n                                <input \r\n                                    type='radio'\r\n                                    name='medium'\r\n                                    value='medium'\r\n                                    checked={priority === 'medium'}\r\n                                    className=\"\" \r\n                                    onChange={changePriority}\r\n                                />\r\n                                Medium\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"priority-check\">\r\n                            <label className=\"low\">\r\n                                <input \r\n                                    type='radio'\r\n                                    name='low'\r\n                                    value='low'\r\n                                    checked={priority === 'low'}\r\n                                    className=\"\" \r\n                                    onChange={changePriority}\r\n                                />\r\n                                Low\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"input-text-container\">\r\n                    <input placeholder=\"Minutes\" type=\"number\" onChange={(e) => setMinutes(e.target.value)} /> \r\n                    <input placeholder=\"Seconds\" type=\"number\" onChange={(e) => setSeconds(e.target.value)} /> \r\n                    </div>\r\n\r\n                    <div className=\"input-action-container\">\r\n                        <input className=\"validate\" type=\"submit\"  value=\"SUBMIT\" />\r\n                    </div>\r\n                </form>\r\n                <div className=\"overlay\" onClick={() => toggleVisibilityModal()}></div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default TaskForm;","import React, { useContext } from 'react';\r\nimport { TaskContext } from '../../../Contexts/TaskContext';\r\n\r\nimport doneSVG from '../../../Assets/Images/done.svg';\r\nimport deletSVG from '../../../Assets/Images/delete.svg'\r\n\r\nconst TaskItem = ({task}) => {\r\n    const {id, title, priority, minutes, seconds, complete} = task;\r\n    const { removeTask, setComplete } = useContext(TaskContext);\r\n    const isComplete = complete ? \"task-complete\"  : \"\";\r\n\r\n    return (\r\n        <li className={\"task-item \" + priority + \" \" + isComplete} key={id}>\r\n            <div className=\"content\">\r\n                <p>{title}</p>\r\n                {\r\n                    minutes && seconds ? \r\n                        <span className=\"estimation\">estimate time : {minutes} mins {seconds} s</span>\r\n                    :\r\n                        <span className=\"estimation-empty\"></span>\r\n                }\r\n            </div>\r\n            <div className=\"action\">\r\n                <div className=\"done\" onClick={() => setComplete(id)}>\r\n                    <img src={doneSVG} alt=\"done\" />\r\n                </div>\r\n                <div className=\"delete\" onClick={() => removeTask(id)}>\r\n                    <img src={deletSVG} alt=\"delete\" />\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n \r\nexport default TaskItem;","import React, { useContext } from 'react';\r\nimport { TaskContext } from '../../../Contexts/TaskContext';\r\nimport TaskItem from  '../TaskItem';\r\n\r\nconst TaskList = () => {\r\n    const { tasks } = useContext(TaskContext);\r\n\r\n    return ( \r\n        tasks.length > 0 ? (\r\n            <ul>\r\n                {\r\n                    tasks.map(task => {\r\n                        return (<TaskItem task={task} key={task.id} />)\r\n                    })\r\n                }\r\n            </ul>\r\n        ) : (\r\n            <div className=\"empty-tasks\"> \r\n                No Tasks Left,  yheaaah free time <span role=\"img\" aria-label=\"dolphin\">🐬</span><br />\r\n                Clic down <span role=\"img\" aria-label=\"arrow-down\">⬇️</span> bellow to add new Task <span role=\"img\" aria-label=\"check\">✅</span>\r\n            </div>\r\n        )\r\n    );\r\n}\r\n \r\nexport default TaskList;","import React, {useContext} from \"react\";\r\nimport { TaskContext } from \"../../../Contexts/TaskContext\";\r\n\r\nconst TaskModalButton = () => {\r\n    const  buttonText =  \"+ New Task\";\r\n    const { toggleVisibilityModal } = useContext(TaskContext);\r\n\r\n    const openModal = () => {\r\n        toggleVisibilityModal();\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div id=\"add-task-container\">\r\n                <button className=\"add-task\" onClick={() => openModal()}>{buttonText}</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TaskModalButton;","import React from 'react';\r\nimport TaskForm from './TaskForm';\r\nimport TaskList from './TaskList';\r\nimport TaskModalButton from './TaskModalButton';\r\n\r\nimport TaskContextProvider from '../../Contexts/TaskContext';\r\n\r\nconst TaskContainer = () => {\r\n    return ( \r\n        <section id=\"task-container\">\r\n            <TaskContextProvider>\r\n                <h2 className=\"title\">Tasks</h2>\r\n                <TaskList></TaskList>\r\n                <TaskModalButton />\r\n                <TaskForm></TaskForm>\r\n            </TaskContextProvider>\r\n        </section>\r\n    );\r\n}\r\n \r\nexport default TaskContainer;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>Timer Tasks</h1>\r\n        </header>\r\n    );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Designed &amp; Developped by <a href=\"https://naweed-sufranj.fr/\" target=\"_blank\" rel=\"noopener noreferrer\">Naweed SUFRANJ</a></p>\r\n            <p>source code here :  <a href=\"https://github.com/SufranjNaweed/timer-task\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/SufranjNaweed/timer-task</a></p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './App.css';\r\nimport './Assets/SCSS/main.scss';\r\n\r\nimport Timer from './Components/Timer';\r\nimport Task from './Components/Tasks';\r\nimport Header from './Components/Header';\r\nimport Footer from './Components/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Timer />\r\n      <Task />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}